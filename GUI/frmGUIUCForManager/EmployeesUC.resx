<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInfo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABM5JREFUaEPt
        lmtsU2UYxzvNYoyXLxrxg8ZIGDOYEM0SxxYg7KK7dFvnmkLBNb2sMqnAiGEziwzxMiP6RSKTYacuYqgM
        E8YGtawBzC6C4YuEqBiDbhguk2jMAuvYZI/P8/qc5fTsLdvpttPN7J/8cnp5z/P+nvOe87am+cxnPtOX
        jIyMu7Ozs9fm5OR8hcefkOsIKOTm5q7iobMvWVlZVpTsUwtrwTEnefjsCl7xN2XCMfgZG9mJ5yzg0xMb
        lKmVSE6GATy3jMskJijxDDKiktLLP7gSz3I544MCJzRC8dCXlpaWzCWNC+4oT0tkpLhtudC8LQ9+22cW
        R8kYG5c1LjjpDo1EFIp07xdmgK+Lowi8ka8d/ymXNS60JWokoq60VlqLeiXwOTjDZY0LNnBRLS270hOh
        WoleLmtccNJBmlwmpgdu4AaXNS48sVRKD0odLmtc5nQDEEgx1zgyI9PVQK0zcxC+XFzA5Wc+EFj8+639
        qfDh1rwomT3uFGhE1J+pkX2/uzoPRgOpgDUvcvmZDzWARIkQJNfoid1AzO+plqEN4HKLJoLm0XEyegkW
        3SJ52J+az+WNCwqcHyekl1Dxj1zO+KCAf5yQfhq5nPGBkCVXIqSPYHE2l0tMUOLEOKnJ8w2XSVzgiHkh
        ilzTiE2GPyFUsojLJDZwtGQlCv2lEbwdKG9ewafPjkBHUQocypTJRnMoA3eekkUej+c+t9u9GTnucrku
        43GYj/R+k8/nu5dLGxdoNAE0PwhwcClAWxbA0YL/oNf0GX2HY1DQjqL9CNyGq9jkai5tTEQDE9Bet5Tk
        Rkny1dffgab2b6Ht7DU49ksEDn//B/jbeqBme73SBI2r5fIzH5mwmtP1j4PH40YqYM/B4xD+dSQmDS1h
        MY6amNGVKO26kfbo9vCZe7yB4dZdzw3JxImhj5Khar1dXNmJ5BWoCV6JfnpmeMrpiaVrMN3SFelG4JFt
        HZC0xg+Pbdk3IpMnwjuWCJkavG1ksrFQ3U4beeqppSAId5V0Rfai+CjJE8sP9EGS3S+aKK+vlzbwXlW+
        EPnkyCmpaCya2nuUBsKsEH9KTl9fgMI9irialHe7RQPEk9WfQfMHVrjU8LCAXpdXVAoRemBlorGgB5sb
        uMQa8eX57wYeQNHzWvExOiOQ+v4puMPeNNaIGqdbPJBit5GJxoLGcwM3WSWOACShZGictISs1suwsL4T
        7t/QAsnlzQJ6vc7rEyK6V+Ds2ApcZRv9Ke2KOGSyenC8tlOI0D4vE42Fv61bnIc/fsdYR19sLXAnPrQX
        ZFJ6WL03KESq696CjgvDUlkZU96FSjsjOTIhvZSe/Bucvs1ChvZ3mayWhgMdinx/3P+NcL/fJROKB9vn
        uCV6POIXdqImSJ5/ifHoqWAd/cGJpdtmvNh3t4omSIxuD9rn6UEV/4XwSPd8Td3bypVXOOdwOB5iJX3B
        Sa9oJaYKrYTTV6WVjObFygGP17seX5+j91b7C70FFtsS1pp8cMIhrcB0QM/Emo9DUI67k/PlLeCu8ILr
        pY3Dzk1bf3BVbnhFuefpypP8snwLrDSXReJqItEptq59YkVhWSQ9zwLLzWU3C23rnuKv5k7+F03Q7UO3
        ETWxqsh6hT+eW6EmSL7Qak83mUymfwEbbs9k+q/1KwAAAABJRU5ErkJggg==
</value>
  </data>
</root>